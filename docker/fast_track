#!/bin/bash

set -eu

log() {
  echo "$1" >&2
}

is_merge_commit() {
  if [ "$(git show | awk '{print $1}' | head -n 2 | tail  -1)" == "Merge:" ]; then
    return 0
  fi

  return 1
}

# This should use registry API, not pulling
docker_image_exists() {
  local image_full_name="$1"; shift
  log "Checking if image ${image_full_name} exists..."

  if DOCKER_CLI_EXPERIMENTAL=enabled docker manifest inspect "$image_full_name" > /dev/null 2>&1; then
    log "Image ${image_full_name} exists, pulling it..."
    docker pull --quiet "$image_full_name" > /dev/null 2>&1 &

    return 0
  fi

  log "Image ${image_full_name} does not exist, building it..."
  return 1
}

get_last_commit_id() {
  cid=$(git log --no-merges --format="%H" -1)
  echo "${cid}"
}

diff() {
  if git diff --quiet HEAD "$1"; then
    return 0
  fi

  return 1
}

COMMIT_ID="$2"
log "Fast track detection for commit id $COMMIT_ID"

if is_merge_commit; then
  PARENT_COMMIT_ID=$(get_last_commit_id)
  log "This is a merge commit. Checking diff with parent commit id $PARENT_COMMIT_ID"

  if diff "$PARENT_COMMIT_ID"; then
    log "$PARENT_COMMIT_ID is identical to HEAD"
    COMMIT_ID="$PARENT_COMMIT_ID"
  else
    log "$PARENT_COMMIT_ID differs from HEAD"
  fi
fi

if docker_image_exists "$1:$COMMIT_ID"; then
  echo "$COMMIT_ID"
else
  echo "FALSE"
fi